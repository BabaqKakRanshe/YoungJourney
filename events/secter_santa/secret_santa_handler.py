import logging
import random

from aiogram import types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.filters import Command

import events.secter_santa.secret_santa_db
from events.secter_santa.secret_santa_db import is_in_secret_santa, collection_secret_santa, add_wish_list_to_user, get_wish_list_by_user_id
from handlers.handlers import router,dp
from database.db import add_user_to_collection, find_user_by_id, collection_users



# –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Ñ—Ä–∞–∑ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ–∂–∏–º–∞
santa_trigger_phrases = ["–¢–∞–π–Ω—ã–π –∞–Ω–≥–µ–ª", "–ê–Ω–≥–µ–ª", "üòá", "üëºüèª"]

wish_list_phrases = [
    "–¢–µ–ø–µ—Ä—å –ø–∏—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å, –º–æ–π —Å–ª–∞–¥–∫–∏–π –ø–∏—Ä–æ–∂–æ—á–µ–∫ üíã‚ú®",
    "–ñ–¥—É —Ç–≤–æ–π —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π, –º–æ–π —Å–∞—Ö–∞—Ä–Ω—ã–π –∑–∞–π—á–∏–∫ üç≠üíï",
    "–†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å, –º–æ–π –º–∞–ª–µ–Ω—å–∫–∏–π –ø–æ–¥–∞—Ä–æ—á–µ–∫ üéâüíå",
    "–ñ–¥—É —Ç–≤–æ–∏ –º–µ—á—Ç—ã, –º–æ–π –∫—Ä–æ–ª–∏–∫ üê∞üí´",
    "–ù—É-–∫–∞, –ø–∏—à–∏, —á—Ç–æ —Ç–µ–±—è –ø–æ—Ä–∞–¥—É–µ—Ç, –º–æ—è –∫–æ–Ω—Ñ–µ—Ç–∫–∞ üç¨üíé",
    "–û—Ç–∫—Ä—ã–≤–∞–π —Ç–∞–π–Ω—ã —Å–≤–æ–∏—Ö –∂–µ–ª–∞–Ω–∏–π, –º–æ—è –∫–ª—É–±–Ω–∏—á–∫–∞ üçì‚ú®",
    "–¢–µ–ø–µ—Ä—å —Ç–≤–æ–π —Ö–æ–¥, –º–æ–π —Ç–∏–≥—Ä–µ–Ω–æ–∫, –≥–æ–≤–æ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å üêæüéÅ",
    "–î–∞–≤–∞–π, –º–æ–π –∫–µ–∫—Å–∏–∫, —Ä–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Ç–µ–±—è —Å–¥–µ–ª–∞–µ—Ç —Å—á–∞—Å—Ç–ª–∏–≤—ã–º üßÅ‚ù§Ô∏è",
    "–ñ–¥—É —Ç–≤–æ–π –≤–æ–ª—à–µ–±–Ω—ã–π —Å–ø–∏—Å–æ–∫, –º–æ–π –æ–±–∞—è—à–∫–∞ ü™Ñüíù"
]
welcome_list_phrases = [
    "–£–∂–µ —Å—Ç—Ä–æ–∏—à—å –ø–ª–∞–Ω—ã, –∫–∞–∫ —Å–∫—Ä—ã—Ç—å –ø–æ–¥–∞—Ä–∫–∏? üéÅ",
    "–ö—Ç–æ –∂ –Ω–µ –∂–∞–∂–¥–µ—Ç —Å—é—Ä–ø—Ä–∏–∑–æ–≤, –ø—Ä–∞–≤–¥–∞? üòè",
    "–í—Å–µ —É–∂–µ –≤ –ø—Ä–µ–¥–≤–∫—É—à–µ–Ω–∏–∏... –∏–ª–∏ —Ç—ã –µ—â—ë –Ω–µ –≤—ã–±—Ä–∞–ª, —á—Ç–æ —Ö–æ—á–µ—à—å? üéÖ",
    "–ü—Ä—è–º–æ —Å–µ–π—á–∞—Å –Ω–∞—á–∏–Ω–∞–µ—à—å –º–µ—á—Ç–∞—Ç—å –æ —Å–≤–æ—ë–º –ø–æ–¥–∞—Ä–∫–µ? üòú",
    "–ö–æ–≥–¥–∞ —É–∂–µ –º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–∞—Ä–∫–æ–≤? üïµÔ∏è‚Äç‚ôÇÔ∏è",
    "–ú—ã—Å–ª–∏—à—å, —á—Ç–æ –ø–æ–ª—É—á–∏—à—å? –ò–ª–∏ —ç—Ç–æ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è —Å—é—Ä–ø—Ä–∏–∑–æ–º? ü§´",
    "–ê —Ç—ã —É–∂–µ —Ä–µ—à–∏–ª, —á—Ç–æ –ø–æ–¥–∞—Ä–∏—à—å? –ò–ª–∏ –±—É–¥–µ—à—å –Ω–∞–¥–µ—è—Ç—å—Å—è –Ω–∞ —á—É–¥–æ? üéÅ",
    "–ù–∞–¥–µ–µ—à—å—Å—è, —á—Ç–æ –≤ —ç—Ç–æ—Ç —Ä–∞–∑ –±—É–¥–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–¥–∞—Ä–∫–∏, –Ω–æ –∏ –º–∞–≥–∏—è? ‚ú®",
]

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –°–∞–Ω—Ç–∞
@dp.message(lambda msg: any(phrase.lower() in msg.text.lower() for phrase in santa_trigger_phrases))
async def start_handler(message: types.Message):
    welcome_phrase = random.choice(welcome_list_phrases)

    LeaderName = find_user_by_id(message.from_user.id, collection_secret_santa)

    if LeaderName:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –∏–º—è
        LeaderName = LeaderName.get("real_first_name", "–ò–º—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–Ø —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω? üò¨"), KeyboardButton(text="–ê —á—Ç–æ —ç—Ç–æ? ü§î"),
                 KeyboardButton(text="–ú–æ–π wish list üíÖüèª")]
            ],
            resize_keyboard=True
        )
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {LeaderName} üëã " + welcome_phrase,
                             reply_markup=keyboard)
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ "TEST"
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ö–æ–Ω–µ—á–Ω–æ —Ö–æ—á—É! ü§©"), KeyboardButton(text="–ê —á—Ç–æ —ç—Ç–æ? ü§î")]
            ],
            resize_keyboard=True
        )
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç, –ª–∏–¥–µ—Ä üëã –•–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å –≤ –¢–∞–π–Ω–æ–≥–æ –ê–Ω–≥–µ–ª–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π? ü§îüéÅ",
                             reply_markup=keyboard)


@dp.message(lambda msg: msg.text in ["–ö–æ–Ω–µ—á–Ω–æ —Ö–æ—á—É! ü§©", "–Ø –≤ –¥–µ–ª–µ! üëçÔ∏è", "–Ø —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω? üò¨"])
async def secret_santa_info(message: types.Message):
    user_id = message.from_user.id
    user_nickname = message.from_user.username
    user_first_name = message.from_user.first_name

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
    if is_in_secret_santa(user_id):
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        await message.answer("–¢—ã —É–∂–µ –≤ –º–æ–µ–º —Å–ø–∏—Å–∫–µ! üôå")

    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –±–∞–∑—É
        user_document = find_user_by_id(user_id, collection_users)

        add_user_to_collection(user_id, collection_secret_santa, user_name=user_nickname, real_first_name=user_first_name)
        await message.answer(
            "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! üéâ –¢—ã –∑–∞–ø–∏—Å–∞–Ω ‚úÖ, –æ–∂–∏–¥–∞–π 1 –¥–µ–∫–∞–±—Ä—è üìÖ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–µ–≥–æ —Å—á–∞—Å—Ç–ª–∏–≤—á–∏–∫–∞ üéÅ‚ú®!\n"
            "\n–ù–µ –∑–∞–±—É–¥—å –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ–π wish list!üíÖüèªüíÖüèªüíÖüèª",
            reply_markup=ReplyKeyboardRemove()
        )

@dp.message(lambda msg: msg.text == "–ê —á—Ç–æ —ç—Ç–æ? ü§î")
async def secret_santa_info(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ü–æ–Ω—è—Ç–Ω–æ üëç"),KeyboardButton(text="–ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ ‚ò†Ô∏è") ]
        ],
        resize_keyboard=True
    )
    # –õ–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–∏–¥–µ—Ä–∞ –≤ –±–∞–∑—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    await message.answer(
        "‚ùÑÔ∏è –°–∫–æ—Ä–æ –¥–µ–∫–∞–±—Ä—å, –∞ –∑–Ω–∞—á–∏—Ç, –≤—Ä–µ–º—è –¥–ª—è –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ –∏ –ø–æ–¥–∞—Ä–∫–æ–≤! –ù–æ –ø–æ—Å–∫–æ–ª—å–∫—É –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞—Å—Ç–µ—Ç, –ø–æ–¥–∞—Ä–∏—Ç—å —á—Ç–æ-—Ç–æ –∫–∞–∂–¥–æ–º—É —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–ª–æ–∂–Ω–µ–µ. –ü–æ—ç—Ç–æ–º—É –º—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω–∞—à—É –µ–∂–µ–≥–æ–¥–Ω—É—é —Ç—Ä–∞–¥–∏—Ü–∏—é ‚Äî –∏–≥—Ä—É ‚Äò–¢–∞–π–Ω—ã–π –∞–Ω–≥–µ–ª‚Äô! üéÅ‚ú®\n\n"
        "üí° –ö–∞–∫ –∏–≥—Ä–∞—Ç—å?\n\n"
        "1. –ö–∞–∂–¥—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –∏–≥—Ä—É, –∏ –µ–≥–æ –∏–º—è –æ—Å—Ç–∞–µ—Ç—Å—è —Å–∫—Ä—ã—Ç—ã–º –æ—Ç –æ—Å—Ç–∞–ª—å–Ω—ã—Ö.\n"
        "2. 1 –¥–µ–∫–∞–±—Ä—è –º—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∑–∞ –∫–æ–≥–æ –æ–Ω –º–æ–∂–µ—Ç –º–æ–ª–∏—Ç—Å—è, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∏ —Ä–∞–¥–æ–≤–∞—Ç—å –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –ø–æ–¥–∞—Ä–∫–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞. üéÑ\n"
        "3. –í–∞–∂–Ω–æ –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞—Ç—å —Å–≤–æ—é –ª–∏—á–Ω–æ—Å—Ç—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ! üôä\n"
        "4. –ü–æ–¥–∞—Ä–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–º–∏ ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–æ—Ñ–µ, –∫–æ–Ω—Ñ–µ—Ç–∫–∏ –∏–ª–∏ –ø—Ä–∏—è—Ç–Ω—ã–µ –º–µ–ª–æ—á–∏. –ì–ª–∞–≤–Ω–æ–µ ‚Äî —Ä–∞–¥–æ–≤–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞! üéâ\n"
        "5. –í –∫–æ–Ω—Ü–µ –¥–µ–∫–∞–±—Ä—è –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —É–∑–Ω–∞—é—Ç, –∫—Ç–æ –±—ã–ª –∏—Ö ‚Äò–¢–∞–π–Ω—ã–º –∞–Ω–≥–µ–ª–æ–º‚Äô! üéâ\n"
        "\n–í–∞–∂–Ω–æ: –º–∏–Ω–∏ –ø–æ–¥–∞—Ä–∫–∏ –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ—Ä–æ–≥–∏–º–∏. –î–∞–∂–µ –Ω–µ–±–æ–ª—å—à–∏–µ –ø—Ä–∏—è—Ç–Ω–æ—Å—Ç–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–æ—Ñ–µ, –∫–æ–Ω—Ñ–µ—Ç–∫–∏, –ø–æ–¥–æ–π–¥—É—Ç.",
        reply_markup=keyboard
    )


@dp.message(lambda msg: msg.text == "–ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ ‚ò†Ô∏è")
async def start_handler(message: types.Message):
    keyboard = ReplyKeyboardRemove()
    gerbert_chat_link = "https://t.me/GerbertKZ"

    await message.answer(
        "–≠—Ç–æ –æ—á–µ–Ω—å —Ç—è–∂–µ–ª—ã–π —Å–ª—É—á–∞–π üòì, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—É üë©‚Äç‚öïÔ∏èüë®‚Äç‚öïÔ∏è.\n"
        f"[–ù–∞–ø–∏—Å–∞—Ç—å @GerbertKZ]({gerbert_chat_link})",
        reply_markup=keyboard,  # –ü–µ—Ä–µ–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        parse_mode="Markdown"
    )

@dp.message(lambda msg: msg.text == "–ü–æ–Ω—è—Ç–Ω–æ üëç")
async def start_handler(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–Ø –≤ –¥–µ–ª–µ! üëçÔ∏è"),KeyboardButton(text="–≠—Ç–æ –Ω–µ –¥–ª—è –º–µ–Ω—è ü§°") ]
        ],
        resize_keyboard=True
    )
    await message.answer("–ö–∞–∫ –∂–µ –ø—Ä–∏—è—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ —Å —Ç–∞–∫–∏–º –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º—ã–º –∏ –æ–¥–∞—Ä—ë–Ω–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º! üåü\n"
                         "\n –£ –Ω–∞—Å –µ—Å—Ç—å –æ—Ç–≤–µ—Ç? ü§®", reply_markup=keyboard)

@dp.message(lambda msg: msg.text == "–≠—Ç–æ –Ω–µ –¥–ª—è –º–µ–Ω—è ü§°")
async def start_handler(message: types.Message):
    keyboard = ReplyKeyboardRemove()
    await message.answer("–û—Ö, –∫–∞–∫ –∂–µ –∂–∞–ª—å, —á—Ç–æ —Ç–µ–±—è –Ω–µ –±—É–¥–µ—Ç ü§¶‚Äç‚ôÇÔ∏èüòî...", reply_markup=keyboard)

class WishListStates(StatesGroup):
    waiting_for_wish_list = State()

@dp.message(lambda message: message.text == "–ú–æ–π wish list üíÖüèª")
async def wish_list_start(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    random_phrase = random.choice(wish_list_phrases)

    wish_list = get_wish_list_by_user_id (user_id, collection_secret_santa)

    if wish_list is None:
        wish_list = "–Ω–∏—á–µ–≥–æ (—ç—Ç–æ –Ω–∞ —Ç–µ–±—è –Ω–µ –ø–æ—Ö–æ–∂–µ)"

    await message.reply(random_phrase + "\n"
                                        "\n–ë—É–¥—å —Ç–∞–∫ –¥–æ–±—Ä, –≤–≤–µ–¥–∏ –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–≤–æ–∏—Ö –≤–µ–ª–∏–∫–∏—Ö –ø–æ–∂–µ–ª–∞–Ω–∏–π –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –µ—Å–ª–∏, –∫–æ–Ω–µ—á–Ω–æ, —ç—Ç–æ –Ω–µ —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω–æ ü•∫. \n"
                                        "\n–ò–º–µ–π –≤ –≤–∏–¥—É, —á—Ç–æ —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä–µ—Ç —Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —è —É–∂–µ –ø–æ—Ç—Ä—è—Å—ë–Ω–Ω–æ –∑–∞–ø–æ–º–Ω–∏–ª ü§Ø.\n"
                                        "\n–í –ø—Ä–æ—à–ª—ã–π —Ä–∞–∑ —Ç—ã –ø—Ä–æ—Å–∏–ª: " + wish_list + ". \n"
                                        "\n–°–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–∏–ª—Å—è? ü§®")

    await state.set_state(WishListStates.waiting_for_wish_list)

@dp.message(WishListStates.waiting_for_wish_list)
async def add_wish_list(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    wish_list = message.text

    await message.answer(f"–û, —Ç–∞–∫ —ç—Ç–æ —Ç–æ—á–Ω–æ —Ç–æ, —á—Ç–æ –≤—ã —Ö–æ—Ç–µ–ª–∏?\n"
                         f"–í–∞—à —Å–ø–∏—Å–æ—á–µ–∫: \n{wish_list}\n"
                         f"\n–ù—É —á—Ç–æ –∂, –µ—Å–ª–∏ —ç—Ç–æ –≤—Å—ë –≤–µ—Ä–Ω–æ, –¥–æ–±–∞–≤–∏–º –≤ –≤–∞—à –±–µ–∑—É–ø—Ä–µ—á–Ω—ã–π wish list! üéâ")

    add_wish_list_to_user (user_id, wish_list, collection_secret_santa )
    await state.clear()

#–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
print("Module secret_santa_handler successfully loaded.")
logging.info("Module secret_santa_handler successfully loaded.")