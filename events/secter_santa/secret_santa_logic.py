import logging
from apscheduler.schedulers.asyncio import AsyncIOScheduler
import pytz
import random
from datetime import datetime
from faker import Faker

from handlers.handlers import bot
from database.db import get_all_users
from events.secter_santa.secret_santa_db import collection_secret_santa

# –£–∫–∞–∑—ã–≤–∞–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
timezone = pytz.timezone("Asia/Almaty")  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å

#–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
async def send_message(user_id, message):
    try:
        await bot.send_message(user_id, message)
        print(f"Message successfully sent to user {user_id} in {datetime.now(timezone)}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
async def start_scheduler():
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ —Å —É—á–µ—Ç–æ–º —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
    scheduler = AsyncIOScheduler(timezone=timezone)

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Secret Santa
    all_users = get_all_users(collection_secret_santa)

    # –ù–∞–∑–Ω–∞—á–∞–µ–º –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–≥–æ "–¢–∞–π–Ω–æ–≥–æ –ê–Ω–≥–µ–ª–∞"
    assign_secret_santa(all_users, collection_secret_santa)

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –∑–∞–¥–∞—á–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é (–≤ 18:08 –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ timezone)
    scheduler.add_job(send_secret_santa_to_all_users, 'cron', hour=20, minute=7)  # –í—Ä–µ–º—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ

    scheduler.start()

    print("Scheduler is up and running")
    print(f"Current time: {datetime.now(timezone)}")


def assign_secret_santa(users, collection):
    # –ö–æ–ø–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    shuffled_users = users[:]
    random.shuffle(shuffled_users)

    # –ù–∞–∑–Ω–∞—á–∞–µ–º –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¢–∞–π–Ω—ã–º –ê–Ω–≥–µ–ª–æ–º
    secret_santa_map = {}
    for i in range(len(users)):
        # –ö–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ, –∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ–ª—É—á–∞–µ—Ç –ø–µ—Ä–≤–æ–≥–æ
        secret_santa_map[shuffled_users[i]["user_id"]] = shuffled_users[(i + 1) % len(users)]["user_id"]

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å ID –¢–∞–π–Ω–æ–≥–æ –ê–Ω–≥–µ–ª–∞
        collection.update_one(
            {"user_id": shuffled_users[i]["user_id"]},
            {"$set": {"secret_santa_id": secret_santa_map[shuffled_users[i]["user_id"]]}}
        )

    return secret_santa_map

async def send_secret_santa_to_all_users():
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    all_users = get_all_users(collection_secret_santa)

    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    for user in all_users:
        user_id = user["user_id"]

        # –ü–æ–ª—É—á–∞–µ–º ID —Ç–∞–π–Ω–æ–≥–æ –ê–Ω–≥–µ–ª–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        secret_santa_name = user.get(
            "real_first_name")
        secret_santa_nick_name = user.get(
            "nick_name")
        if secret_santa_name:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            message = f"üòá –í–∞—à –¢–∞–π–Ω—ã–π –ê–Ω–≥–µ–ª ‚Äî —ç—Ç–æ {secret_santa_name} {secret_santa_nick_name}! üéÅ\n" \
                      "–ù–µ —Ä–∞—Å–∫—Ä—ã–≤–∞–π—Ç–µ —Å–≤–æ—é –ª–∏—á–Ω–æ—Å—Ç—å, –¥–æ –º–æ–º–µ–Ω—Ç–∞ –≤—Ä—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞! üôä\n" \
                      "–°—Ç–∞—Ä–∞–π—Å—è –º–æ–ª–∏—Ç—å—Å—è –∑–∞ —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –µ–≥–æ, –∞ —Ç–∞–∫–∂–µ —Ç–∞–π–Ω–æ —Ä–∞–¥—É–π –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –ø–æ–¥–∞—Ä–∫–∞–º–∏ ‚úùÔ∏è"

            try:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await bot.send_message(user_id, message)
                print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}, –¢–∞–π–Ω—ã–π –ê–Ω–≥–µ–ª: {secret_santa_name}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
        else:
            print(f"–î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –¢–∞–π–Ω—ã–π –ê–Ω–≥–µ–ª.")


fake = Faker()
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é
def add_random_user_to_collection(collection, num_users):
    print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {num_users}")
    try:
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        for _ in range(num_users):
            user_id = random.randint(100000000, 999999999)  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ user_id
            user_name = fake.user_name()  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –Ω–∏–∫–∞
            real_first_name = fake.first_name()  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–º–µ–Ω–∏
            real_last_name = fake.last_name()  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π —Ñ–∞–º–∏–ª–∏–∏

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
            if collection.find_one({"user_id": user_id}):
                print(f"User with ID {user_id} already exists.")
                continue

            # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_data = {
                "user_id": user_id,
                "real_first_name": real_first_name,
                "real_last_name": real_last_name,
                "nick_name": user_name,
                "date_added": datetime.now()  # –î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
            }

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            collection.insert_one(user_data)
            print(f"User added: {user_id}, {user_name}, {real_first_name} {real_last_name}")
    except Exception as e:
        print(f"Error occurred: {e}")









# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
print("Module secret_santa_logic successfully loaded.")
logging.info("Module secret_santa_logic successfully loaded.")
