import logging
from apscheduler.schedulers.asyncio import AsyncIOScheduler
import pytz
import random
from datetime import datetime
from faker import Faker

from handlers.handlers import bot
from database.db import get_all_users
from events.secter_santa.secret_santa_db import collection_secret_santa

# –£–∫–∞–∑—ã–≤–∞–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
timezone = pytz.timezone("Asia/Almaty")  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å

#–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
async def send_message(user_id, message):
    try:
        await bot.send_message(user_id, message)
        print(f"Message successfully sent to user {user_id} in {datetime.now(timezone)}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
async def start_scheduler(year: int, month: int, day: int, hour: int, minute: int):

    scheduler = AsyncIOScheduler(timezone=timezone)

    all_users = get_all_users(collection_secret_santa)

    assign_secret_santa(all_users, collection_secret_santa)

    scheduler.add_job(
        send_secret_santa_to_all_users,
        'date',
        run_date=datetime(year, month, day, hour, minute, tzinfo=timezone),
        misfire_grace_time=3600  # –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è, –µ—Å–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∞ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–µ –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 1 —á–∞—Å
    )

    scheduler.start()

    print("Scheduler is up and running")
    print(f"Current time: {datetime.now(timezone)}")
    print(f"Task scheduled for {year}-{month:02d}-{day:02d} {hour:02d}:{minute:02d} ({timezone})")


def assign_secret_santa(users, collection):
    # –ö–æ–ø–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    shuffled_users = users[:]
    random.shuffle(shuffled_users)

    # –ù–∞–∑–Ω–∞—á–∞–µ–º –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¢–∞–π–Ω—ã–º –ê–Ω–≥–µ–ª–æ–º
    secret_santa_map = {}
    for i in range(len(users)):
        # –ö–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ, –∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ–ª—É—á–∞–µ—Ç –ø–µ—Ä–≤–æ–≥–æ
        secret_santa_map[shuffled_users[i]["user_id"]] = shuffled_users[(i + 1) % len(users)]["user_id"]

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å ID –¢–∞–π–Ω–æ–≥–æ –ê–Ω–≥–µ–ª–∞
        collection.update_one(
            {"user_id": shuffled_users[i]["user_id"]},
            {"$set": {"secret_santa_id": secret_santa_map[shuffled_users[i]["user_id"]]}}
        )

    return secret_santa_map


async def send_secret_santa_to_all_users():
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    all_users = get_all_users(collection_secret_santa)

    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    for user in all_users:
        user_id = user["user_id"]

        # –ü–æ–ª—É—á–∞–µ–º ID —Ç–∞–π–Ω–æ–≥–æ –ê–Ω–≥–µ–ª–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        secret_santa_id = user.get("secret_santa_id")  # ID –¢–∞–π–Ω–æ–≥–æ –ê–Ω–≥–µ–ª–∞

        if secret_santa_id:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¢–∞–π–Ω–æ–≥–æ –ê–Ω–≥–µ–ª–∞
            secret_santa = collection_secret_santa.find_one({"user_id": secret_santa_id})
            if secret_santa:
                secret_santa_name = secret_santa.get("real_first_name", None)
                secret_santa_nick_name = secret_santa.get("nick_name", None)

                # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–∂–µ–ª–∞–Ω–∏–π –¢–∞–π–Ω–æ–≥–æ –ê–Ω–≥–µ–ª–∞
                wish_list = secret_santa.get("wish_list", "–ù–µ—Ç –ø–æ–∂–µ–ª–∞–Ω–∏–π.")  # –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

                # –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏ –∏–º–µ–Ω–∏, –Ω–∏ –Ω–∏–∫–∞, –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ "–ë–µ—Å—Å–æ–≤–µ—á–Ω—ã–π —á–µ–ª–æ–≤–µ–∫"
                if not secret_santa_name and not secret_santa_nick_name:
                    secret_santa_name = "–ë–µ—Å—Å–æ–≤–µ—á–Ω—ã–π —á–µ–ª–æ–≤–µ–∫"
                    message = f"üéâ –ò–≥—Ä–∞ –≤ –¢–∞–π–Ω–æ–≥–æ –ê–Ω–≥–µ–ª–∞ –Ω–∞—á–∞–ª–∞—Å—å! üéâ\n" \
                              f"\nüòá –¢—ã —Å—Ç–∞–ª –ø–æ–¥–∞—Ä–∫–æ–¥–∞—Ä–∏—Ç–µ–ª–µ–º –¥–ª—è ‚Äî {secret_santa_name}! üéÅ\n" \
                              "–ù–µ —Ä–∞—Å–∫—Ä—ã–≤–∞–π —Å–≤–æ—é –ª–∏—á–Ω–æ—Å—Ç—å, –¥–æ –º–æ–º–µ–Ω—Ç–∞ –≤—Ä—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞! üôä\n" \
                              "–ú–æ–ª–∏—Å—å –∑–∞ —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –µ–≥–æ, –∏ —Ä–∞–¥—É–π –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –ø–æ–¥–∞—Ä–∫–∞–º–∏ ‚úùÔ∏èüí´\n\n" \
                              f"–¢–≤–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∞–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å (–∏–ª–∏, —Ç–æ—á–Ω–µ–µ, {secret_santa_name}) –ø–æ —Å–µ–∫—Ä–µ—Ç—É —Ä–∞—Å—Å–∫–∞–∑–∞–ª –º–Ω–µ, —á—Ç–æ —Ö–æ—á–µ—Ç: {wish_list} üéÖ‚ú®"

                else:
                    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    message = f"üéâ –ò–≥—Ä–∞ –≤ –¢–∞–π–Ω–æ–≥–æ –ê–Ω–≥–µ–ª–∞ –Ω–∞—á–∞–ª–∞—Å—å! üéâ\n" \
                              f"\nüòá –¢—ã —Å—Ç–∞–ª –ø–æ–¥–∞—Ä–∫–æ–¥–∞—Ä–∏—Ç–µ–ª–µ–º –¥–ª—è ‚Äî {secret_santa_name}! üéÅ\n" \
                              "–ù–µ —Ä–∞—Å–∫—Ä—ã–≤–∞–π —Å–≤–æ—é –ª–∏—á–Ω–æ—Å—Ç—å, –¥–æ –º–æ–º–µ–Ω—Ç–∞ –≤—Ä—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞! üôä\n" \
                              "–ú–æ–ª–∏—Å—å –∑–∞ —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –µ–≥–æ, –∏ —Ä–∞–¥—É–π –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –ø–æ–¥–∞—Ä–∫–∞–º–∏ ‚úùÔ∏èüí´\n\n" \
                              f"–¢–≤–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∞–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å {secret_santa_name} –ø–æ —Å–µ–∫—Ä–µ—Ç—É —Ä–∞—Å—Å–∫–∞–∑–∞–ª –º–Ω–µ, —á—Ç–æ —Ö–æ—á–µ—Ç: {wish_list} üéÖ‚ú®"

                    # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–∏–∫–Ω–µ–π–º, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
                    if secret_santa_nick_name != "–ë–µ–∑ –Ω–∏–∫–∞":
                        message += f"\n\n–≠—Ç–æ —á–∞—Ç —Å —Ç–≤–æ–∏–º –æ–±—ä–µ–∫—Ç–æ–º –ø–∞–¥–∞—Ä–∫–æ–¥–∞—Ä–µ–Ω–∏—è, —á—Ç–æ–± –Ω–µ –ø–µ—Ä–µ–ø—É—Ç–∞–ª –Ø—Ä–∏–∫–æ–≤: [@{secret_santa_nick_name}](https://t.me/{secret_santa_nick_name})"

                try:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    await bot.send_message(user_id, message, parse_mode="Markdown")
                    print(f"Message sent to user {user_id}, Secret Santa: {secret_santa_name}")
                except Exception as e:
                    print(f"Error sending message to user {user_id}: {e}")
            else:
                print(f"Secret Santa for user {user_id} not found in the database.")
        else:
            print(f"No Secret Santa found for user with ID {user_id}.")



fake = Faker()
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é
def add_random_user_to_collection(collection, num_users):
    print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {num_users}")
    try:
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        for _ in range(num_users):
            user_id = random.randint(100000000, 999999999)  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ user_id
            user_name = fake.user_name()  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –Ω–∏–∫–∞
            real_first_name = fake.first_name()  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–º–µ–Ω–∏
            real_last_name = fake.last_name()  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π —Ñ–∞–º–∏–ª–∏–∏

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
            if collection.find_one({"user_id": user_id}):
                print(f"User with ID {user_id} already exists.")
                continue

            # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_data = {
                "user_id": user_id,
                "real_first_name": real_first_name,
                "real_last_name": real_last_name,
                "nick_name": user_name,
                "date_added": datetime.now()  # –î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
            }

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            collection.insert_one(user_data)
            print(f"User added: {user_id}, {user_name}, {real_first_name} {real_last_name}")
    except Exception as e:
        print(f"Error occurred: {e}")









# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
print("Module secret_santa_logic successfully loaded.")
logging.info("Module secret_santa_logic successfully loaded.")
